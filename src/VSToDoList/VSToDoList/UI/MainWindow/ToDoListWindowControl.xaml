<UserControl x:Class="VSToDoList.UI.MainWindow.ToDoListWindowControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:models="clr-namespace:VSToDoList.Models"
             xmlns:viewModels="clr-namespace:VSToDoList.UI.MainWindow.ViewModels"
             xmlns:controls="clr-namespace:VSToDoList.Controls;assembly=VSToDoList.Controls"
             xmlns:converters="clr-namespace:VSToDoList.BL.Services.Converters"
             xmlns:vsp="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.14.0"
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="300"
             Background="{DynamicResource VsBrush.Window}"
             Foreground="{DynamicResource VsBrush.WindowText}"
             Name="thisWindow"
             DataContext="{Binding RelativeSource={RelativeSource Self}}">
    <UserControl.Resources>
        <viewModels:ToDoListWindowViewModel x:Key="ViewModel" />
        <converters:ControlSizeConverter x:Key="SizeConverter" />
        <converters:TaskStatusToBooleanConverter x:Key="StatusConverter"/>
        <converters:TaskStatusToTextDecorationConverter x:Key="TextDecorationConverter"/>
    </UserControl.Resources>
    <UserControl.InputBindings>
        <KeyBinding Key="Return" Command="{Binding Path=EditTaskCommand,RelativeSource={RelativeSource AncestorType=UserControl}}"/>
        <KeyBinding Key="Return" Modifiers="Ctrl" Command="{Binding Path=AddTaskBelowCommand,RelativeSource={RelativeSource AncestorType=UserControl}}"/>
        <KeyBinding Key="Return" Modifiers="Ctrl+Shift" Command="{Binding Path=AddSubTaskBelowCommand,RelativeSource={RelativeSource AncestorType=UserControl}}"/>
        <KeyBinding Key="Delete" Modifiers="Ctrl" Command="{Binding Path=DeleteTaskCommand,RelativeSource={RelativeSource AncestorType=UserControl}}"/>
    </UserControl.InputBindings>

    <Grid DataContext="{StaticResource ViewModel}" Name="Container" ScrollViewer.HorizontalScrollBarVisibility="Disabled" MouseUp="OnGridMouseUp">
        <TreeView x:Name="TasksTreeView" Background="{DynamicResource VsBrush.Window}"
                  ItemsSource="{Binding Path=TasksList,Mode=TwoWay}" HorizontalAlignment="Stretch"
                  ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                  PreviewMouseDoubleClick="TreeView_OnPreviewMouseDoubleClick"
                  AllowDrop="True">
            <TreeView.Resources>

                <!-- The Visual Studio color used in the Solution Explorer-->
                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}"
                                 Color="{DynamicResource {x:Static vsp:TreeViewColors.SelectedItemInactiveColorKey}}" />
                <!-- The Visual Studio color for the Tool Windows Text-->
                <SolidColorBrush x:Key="ToolWindowText" Color="{DynamicResource VsBrush.ToolWindowText}" />
            </TreeView.Resources>

            <!---->
            <TreeView.ItemTemplate>
                <HierarchicalDataTemplate DataType="{x:Type models:Task}" ItemsSource="{Binding Path=SubTasks,Mode=TwoWay}">
                    <Grid Margin="1,0,1,0"
                        Width="{Binding RelativeSource={RelativeSource AncestorType=TreeViewItem},Path=ActualWidth,Converter={StaticResource SizeConverter}}"
                        >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <CheckBox IsChecked="{Binding Status,Converter={StaticResource StatusConverter}}" Grid.Column="0" VerticalAlignment="Center" Focusable="False"/>
                        <controls:EditBox x:Name="taskBox" Value="{Binding Name,Mode=TwoWay}" TextDecoration="{Binding Status,Converter={StaticResource TextDecorationConverter},Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" 
                                          Foreground="{DynamicResource VsBrush.ToolWindowText}"  
                                          Grid.Column="1" VerticalAlignment="Center" Margin="1,0,0,2"
                                          Focusable="False"
                                          PreviewMouseLeftButtonDown="TaskBox_PreviewMouseLeftButtonDown"
                                          PreviewMouseMove="TaskBox_PreviewMouseMove">
                        </controls:EditBox>
                            
                        <Button HorizontalAlignment="Right" Grid.Column="2" Background="Transparent" Click="OnTreeViewItemAddTaskButtonClicked"
                                            BorderBrush="Transparent" ToolTip="Add new task" Focusable="False">
                            <Image Source="/VsToDoList;component/Resources/plus.png" Width="16" Height="16" />
                        </Button>
                        <Button HorizontalAlignment="Right" Grid.Column="3" Background="Transparent" Margin="3,0,0,0" Click="OnTreeViewItemDeleteTaskButtonClicked"
                                            BorderBrush="Transparent" ToolTip="Delete task and its children" Focusable="False">
                            <Image Source="/VsToDoList;component/Resources/minus.png" Width="16" Height="16" />
                        </Button>
                    </Grid>
            </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>
            <TreeView.ItemContainerStyle>
                <Style TargetType="{x:Type TreeViewItem}">
                    <Style.Setters>
                    
                        <!-- Set each task as Expanded on load    -->
            <Setter Property="IsExpanded" Value="{Binding IsExpanded,Mode=TwoWay}"/>
            </Style.Setters>
            </Style>
            </TreeView.ItemContainerStyle>
        </TreeView>
    </Grid>
</UserControl>